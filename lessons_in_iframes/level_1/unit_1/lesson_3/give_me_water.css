/**/
.adjustScaleOfMainOnMobiles{/* Should we handle tablets and phones differently? */
  transform-origin: 50% 100%;
  transform: scale(1);
  transition: transform 2.5s; transition-delay: 0.5s;
}
.slightZoomIn{ transform: scale(1.1); } /* Tablets */
@media (max-width:444px) {
  .slightZoomIn{ transform: scale(1.2); } /* Phones */
}
/**/
.leftThumbTouchArea{
  position: fixed;  z-index: 98;
  left:0; top:20vh; width: 45vw; height: 60vh;
  /* border: 2px dotted green; */
}
.rightThumbTouchArea{
  position: fixed;  z-index: 99;
  left:55vw; top:20vh; width: 45vw; height: 60vh;
  /* border: 2px dotted blue; */
}

/*---*/
.addThisToHideTheSelectedDeviceSlow{   animation: devicesDisappear 2.5s;  animation-fill-mode: forwards;  }
.addThisToHideTheSelectedDeviceQuick{  animation: devicesDisappear 1s;    animation-fill-mode: forwards;  }
.hideTiltInstructionSlow{   animation: devicesDisappear 3.5s; animation-delay: 6s; animation-fill-mode: forwards;  }
.hideTiltInstructionQuick{  animation: devicesDisappear 5s; animation-delay: 2s; animation-fill-mode: forwards;  }
@keyframes devicesDisappear {  0%{  opacity: 1;  }  100%{  opacity: 0;  } /*remove the elements via script when animation ends*/ }

.chooseInputDeviceContainer{ /*Appears after first pictogram loop is complete*/
  z-index: 20;  pointer-events: none;
  opacity: .5;  transform: scale(.5);
  transition: all .5s;
  visibility: hidden;
}
.toNormalOpacityAndScale{  opacity: 1; transform: scale(1); visibility: visible;}
/*do a position fixed for touchscreens*/

.touchTiltInstructions{
  position: fixed; top:-7vmin; left: 0px; width: 100vw;
  display: flex; flex-direction: column; align-items: center;
  /* border: 1px dotted blue; */
}

.blurThingsAtStartWithThis{  filter: blur(11px);  }
.unblurThingsLaterWithThis{  animation: unblur 2.25s forwards;  animation-delay: 0.25s;  }

@keyframes unblur {  0% { filter: blur(10px); }  100% { filter: blur(0px); }  }
.blurAllAtTheEnd{  animation: unblur 0.5s forwards; animation-direction: reverse; animation-timing-function: ease;}
.containerOfThePictogramMan{
  z-index: 14;
  position: absolute;
  bottom: 0px; left: 9vmin;
  width: 50vmin; height: 100vmin;
  overflow: visible;
  pointer-events: none; /* Do not allow click-drag */
  /* border: 2px dotted orange; */
}

.containerOfEyes{position: absolute; left: 0; top: 0; width:100%; height: 100%;}
.delayedEyeMovement{transition: all 0.3s; transition-timing-function: ease;}
.verySlowEyeMovement{transition: all 1.3s; transition-timing-function: ease; transition-delay: 1.7s}
.img540x1080{ position: absolute; left: 0; top: 0; }
.transformOriginBottomLeft{
  transform-origin: 44% 25%;
}
.fadeIn{ animation-name: opacityAnim1; animation-duration: .6s; animation-fill-mode: forwards; }
@keyframes opacityAnim1 {  0%{opacity: 0; transform: scale(.5);} 100%{opacity: 1; transform: scale(1);}  }
.fadeOut{ animation-name: opacityAnim2; animation-duration: .6s; animation-fill-mode: forwards; }
@keyframes opacityAnim2 {  0%{opacity: 1; transform: scale(1);} 100%{opacity: 0; transform: scale(.5);}  }
.containerOfTheTable{
  z-index: 15;
  position:absolute;
  bottom: 0px; right: 0px;
  width: 50vmin; /* 540px by 1080 px */
  height: 100vmin; /* 540px by 1080 px */
  pointer-events: none; /* Do not allow click-drag */
  /* border: 1px dotted cyan; */
}
.theGround{
  z-index: 9;
  position: absolute;
  bottom: 0px;
  width:100vw; height: 8.6vmin;
  background: url(the_ground_repeat_x.webp);
  background-repeat: repeat-x;
  background-size: 8.6vmin 8.6vmin;
}
.containerOfTrayOnHand{
  transform-origin: 50% 50%;
  z-index: 16;
  position:fixed;
  width:50vmin; height:10vmin;
  /*top:50vmin;*/ bottom:40vmin; right:0vmin; /* REMEMBER: 15+20=35vmin convert to vw and subtract (100vw-35vmin) in script AND set style.left in vw */
  pointer-events: none; /*Click through*/
  display: flex;   flex-direction: column;   align-items: center;
  /* border: 1px dotted black; */
  /* transition: bottom 2s ease 0.5s; */ /*CAN'T use transition because it animates with window resize too*/
}
.raiseTheTrayALittle{ animation-name: raiseTheTrayAnim; animation-duration: 2s; animation-fill-mode: forwards; animation-timing-function: ease; animation-delay: 0.5s; }
@keyframes raiseTheTrayAnim {  0%{bottom:40vmin;}  100%{bottom:43vmin;}  }

.outerContainerOfTheGlass{
  transform-origin: 50% 125%;
  z-index: 17;
  position:fixed;
  width:50vmin; height:20vmin;
  /*top:30vmin;*/ bottom:50vmin; right:0vmin; /* DEPRACATED: 50-30=20 */
  pointer-events: none; /*Click through*/
  overflow: visible;
  /* border: 1px dotted green; */
  /* transition: bottom 2s ease 0.5s; */ /*CAN'T use transition because it animates with window resize too*/
}
.raiseTheGlassALittle{ animation-name: raiseTheGlassAnim; animation-duration: 2s; animation-fill-mode: forwards; animation-timing-function: ease; animation-delay: 0.5s; }
@keyframes raiseTheGlassAnim {  0%{bottom:50vmin;}  100%{bottom:53vmin;}  }

.middleContainerOfTheGlass{
  position: relative;
  width:100%; height: 100%;
  overflow: visible;
  /* border: 1px dotted blue; */
}
.rotatableInnermostGlass{
  position: relative;
  width:100%; height: 100%;
  transform-origin: 50% 100%;
  overflow: visible;
  display: flex;   flex-direction: column-reverse;   align-items: center;
  /* border: 1px dotted red; */
}
.breakingGlass{width:50vmin;}

.addWhenFallingFromLeft{
  animation-name: fallFromLeftRotation;
  animation-fill-mode: forwards;
  animation-duration: 1s;
  animation-timing-function: ease;
  animation-delay: .02s;
}
@keyframes fallFromLeftRotation {  0%{ transform: rotate(0deg); }  100%{ transform: rotate(-32deg); }  }
.addWhenFallingFromRight{
  animation-name: fallFromRightRotation;
  animation-fill-mode: forwards;
  animation-duration: 1s;
  animation-timing-function: ease;
  animation-delay: .02s;
}
@keyframes fallFromRightRotation {  0%{ transform: rotate(0deg); }  100%{ transform: rotate(32deg); }  }


/*___FOR MOUSE GAME___*/
.clickablity{
  pointer-events: all;
  position:absolute;
  top:30.5vmin; left:9vmin;
  width:17vmin; height:17vmin;
  /* border: 1px dotted black; */
}
.addThisToFadeInWithSharpen{
  z-index: 21;
  height: 50vmin;
  filter: blur(20px);
  animation-name: appearAndUnblur;
  animation-fill-mode: forwards;
  animation-duration: .7s
}
@keyframes appearAndUnblur
{  0% { opacity:0; filter: blur(20px); }  100% { opacity:1; filter: blur(0px); }  }

.addThisToFadeOutWithBlur{
  animation-name: disappearAndBlur;
  animation-fill-mode: forwards;
  animation-duration: .7s
}
@keyframes disappearAndBlur
{  0% { opacity:1; filter: blur(0px); }  100% { opacity:0; filter: blur(20px); }  }

.bigHandInsteadOfArrowCursorContainer{
  pointer-events: none; /* VERY IMPORTANT Â» otherwise it blocks the real cursor making things unclickable */
  position: fixed;
  /* display: flex;  justify-content: center; 	align-items: center; */
  /* Use flex in case some kind of scale animation is applied to the imgs inside */
  /* CAUTION: Update conversionMagicForCursor value if width and height changes */
  /* A square */ /* CAREFUL: Must update handCursorImg1.style.width if width&height is changed */
  width: 15vmin; height: 15vmin; /* Use vmin to keep everything proportional even though handling screen resize gets trickier */
}

.mixBlendSoftLight{ mix-blend-mode: soft-light; } /* See revealTheHandF() play_with_mouse.js*/
.filterGlow{ filter: grayscale(.7) brightness(1.4); }  /*drop-shadow(0 0 2px rgba(255, 255, 255, 0.5))*/

/**/
.opacityZeroToFull{  animation: toFull 3s;  animation-fill-mode: forwards;  }
.opacityZeroToHalf{  animation: toHalf 3s;  animation-fill-mode: forwards;  }
.opacityZeroToQuarter{  animation: toQuarter 3s;  animation-fill-mode: forwards;  }
@keyframes toFull {     0%{    opacity: 0;  }  100%{    opacity: 1;  }     }
@keyframes toHalf {     0%{    opacity: 0;  }  100%{    opacity: 0.5;  }   }
@keyframes toQuarter {  0%{    opacity: 0;  }  100%{    opacity: 0.25;  }  }

.opacityFullToZero{  animation: fullToZero 1.9s;  animation-fill-mode: forwards;  }
.opacityHalfToZero{  animation: halfToZero 1.9s;  animation-fill-mode: forwards;  }
.opacityQuarterToZero{  animation: quarterToZero 1.9s;  animation-fill-mode: forwards;  }
@keyframes fullToZero {     0%{    opacity: 1; transform: scale(1); }   100%{    opacity: 0; transform: scale(0.01); }         }
@keyframes halfToZero {     0%{    opacity: 0.5;  }   10%{transform: scale(1);} 100%{    opacity: 0; transform: scale(0.01); }      }
@keyframes quarterToZero {  0%{    opacity: 0.25;  }  40%{transform: scale(1);} 100%{    opacity: 0; transform: scale(0.01); }   }

/* Use for iOS permission dialog */
.darkenEverythingInMain{ animation: darkenMain .75s; animation-fill-mode: forwards; }
@keyframes darkenMain { 0%{  filter: brightness(1);  }  100%{   filter: brightness(0.5);  } }
.undarkenEverythingInMain{ animation: undarkenMain .75s; animation-fill-mode: forwards; }
@keyframes undarkenMain { 0%{  filter: brightness(0.5);  }  100%{   filter: brightness(1);  } }
.centerOfScreenPermissionButton{
  position: fixed; min-width:61.8vw; min-height: 61.8vh;
  left: 50%; top: 50%; transform: translate(-50%,-50%);
  display: flex; flex-direction: column; justify-content: center;
  background-color:rgba(51,57,64,0.3); padding: 20px;
  border-radius: 12px;
  backdrop-filter: blur(16px) saturate(150%) brightness(150%);
  -webkit-backdrop-filter: blur(16px) saturate(150%) brightness(150%);
  border-radius: 12px;
  font-size:150%; color: white;
  border: 1px solid rgba(255, 255, 255, 0.25);
  margin-top: 1500px;
  transition-property: margin-top;  transition-duration: 1s; transition-timing-function: ease;
}
.marginTopZero{margin-top: 0px;}
