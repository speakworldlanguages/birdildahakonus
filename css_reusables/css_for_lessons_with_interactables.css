main{
  background-color: #adbbc4; /* The flat color that is behind all interactables */
}
/* MOBILES */
.translationBoxOnMobilesSizePosition{position:fixed; left:0px; top:0px; width:100vw; height:101px; background-color: #728994; display: flex; align-items: center; justify-content: center;}
.touchableDraggableDivSizePosition{position:fixed; right:0vw; top:101px; width:99px; height:130px; background-color: transparent;}
.touchableDraggableImgSizePosition{position:fixed; right:0vw; top:101px; height:130px; background-color: transparent;}
.touchableDraggableInitial{opacity:0.5; transform: translateY(-101px); transition: transform .7s ease-out,opacity .35s;}
.toggleWithTouchStartTouchEnd{ opacity:1; transform: translateY(0px); }
@media (min-width: 400px){ /*A small nudge*/
.touchableDraggableImgSizePosition{right:3vw;}
}
@media (orientation:landscape) and (max-width:750px) {
  .touchableDraggableImgSizePosition{height: 75px}
}
.thetranslationAssistanceOnMobilesP{ /* CAREFUL: Mobiles only!*/
  white-space: pre-wrap;
  color: white;
  font-size: 24px;
  font-weight: bold;
  line-height: 33px;
  text-shadow: 0px 2px 0px #4d606f, 0px -2px 0px #4d606f, 2px 0px 0px #4d606f, -2px 0px 0px #4d606f, 2px 2px 0px #4d606f, -2px -2px 0px #4d606f, 2px -2px 0px #4d606f, -2px 2px 0px #4d606f;
  -webkit-text-stroke: .5px #a6c6de;
}
.theMobilesKanjiFontAdjustP{
  font-size: 22px;
  font-weight: bold;
  -webkit-text-stroke: .5px #a6c6de;
}
/* DESKTOPS */
.translationBoxOnDesktopsSizePosition{pointer-events: none; position:fixed; left:0px; top:83vh; width:100vw; height:120px; display: flex; align-items: center; justify-content: center; opacity: 0; transition: opacity .3s;}
.workaroundForGlassmorphismRevealHelp{ /*As of 2021 with Chrome version 87.0, backdrop filter and opacity don't work together. To achieve the desired effect use two layers: one with filter other with opacity animation*/
  position:fixed; right:1vw; bottom: 1.5vw; width:120px; height:120px; border-radius: 8px; border: 2px solid rgba(255,255,255,.13); box-shadow: 0px 0px 15px 0 rgba( 1,1, 1, 0.15 );
  backdrop-filter: blur( 7px );
  -webkit-backdrop-filter: blur( 7px );
}
.mouseClickableDivSizePosition{position:fixed; right:1vw; bottom: 1.5vw; width:120px; height:120px; background-color: rgba(114,137,148,0.85); border: 2px solid rgba(255,255,255,.01); /*border: 2px solid rgba(74,96,111,.4);*/ border-radius: 8px; opacity:.5; transition: opacity .3s;}
.mouseClickableDivSizePosition:hover{opacity:1; mix-blend-mode: normal; border: 2px solid rgba(255,255,255,.13); /*border: 2px solid rgba(74,96,111,.8);*/ }
.mouseClickableImgSizePosition{height:110px; position:absolute; left: 5px; top: 5px;}
.thetranslationAssistanceOnDesktopsP{ /* CAREFUL: Desktops only!*/
  white-space: nowrap;
  color: #728994;
  font-size: 28px;
  font-weight: bold;
  line-height: normal;
  text-shadow: 0px 1.5px 0px white, 0px -1.5px 0px white, 1.5px 0px 0px white, -1.5px 0px 0px white, 1.5px 1.5px 0px white, -1.5px -1.5px 0px white, 1.5px -1.5px 0px white, -1.5px 1.5px 0px white;
  -webkit-text-stroke: .3px #4d606f;
  filter: drop-shadow(0px 0px 2px rgb(45,64,75));
}
.theDesktopsKanjiFontAdjustP{
  font-size: 38px;
  font-weight: normal;
}
.veryLongBackgroundImageContainer{
  z-index: 0;
  position: fixed;  top: 0;  bottom: 0;  left: 0;  right: 0;
  display: flex;
  flex-direction: column-reverse; /*This makes it like bottom:0 with position: fixed on condition that justify-content: is default (flex-start)*/
	align-items: center;
  overflow: hidden;
}

.veryLongBackgroundImageContainer img{
  height: 100%;
}

.typeOfDivThatContainsInteractables{
  width:100%;
  height: 100%;
  display: flex;
  flex-direction: column;
  justify-content: flex-end; /*results like bottom:0*/
  align-items: center;
  background-color: #adbbc4;
}

.typeOfDivThatContainsInteractables img{
  max-width: 100vw;
  height: 100vmin;
  object-fit: scale-down;
}

.controlTheAbsoluteDivWithinThisRelativeDiv{
  position: relative;
}

.theClickableTapableArea{
  display: block;
  position: absolute;
  /*bottom: depends on the lesson. See html of the lesson;*/
  /*right: depends on the lesson. See html of the lesson;*/
  /*width: depends on the lesson. See html of the lesson;*/
  /*height: depends on the lesson. See html of the lesson;*/
  /*Use dotted borders when testing and adjust as necessary*/
}

.layeredOverImageContainer1000x1000{
  pointer-events: none;
  z-index: 50;
  position: fixed;  top: 0;  bottom: 0;  left: 0;  right: 0;
  display: flex;  flex-direction: column-reverse;	align-items: center;
  overflow: hidden;
}

.changeFlexPositionPortraitLandscapeAndBackgroundColorToo{
  position: fixed;  top: 0px;  left: 0px;  width: 100%;  height: 100%;
  /*overflow: hidden;*/ /*This may be unnecessary*/
  display: flex;  flex-direction: column;
  /* -webkit-filter: blur(0px); */ /*bug fix?*/
}

.beSquareInPortraitAndFullWidthRectangleInLandscape{
  overflow: hidden; /* This is the one that is necessary */
  position: relative; /* To be able to center its contents which are set to position absolute wrt this */
}
.beSquareInPortraitAndFullWidthRectangleInLandscape img{
  position: absolute;
  left: 50%;
  transform: translateX(-50%);
}

@media screen and (orientation:landscape){
  .layeredOverImageContainer1000x1000 img{
    height: 100%;
    width: auto;
  }
  .layeredOverImageContainer2222x1000 img{
    height: 100%;
    width: auto;
  }
  .changeFlexPositionPortraitLandscapeAndBackgroundColorToo{ /* Used for the first time in 1-6-3 */
    background-color: black;
    justify-content: center;
  }
  .beSquareInPortraitAndFullWidthRectangleInLandscape{
    height: 40vw; /* 2.5 : 1 aspect ratio */
    width: 100vw;
  }
  .beSquareInPortraitAndFullWidthRectangleInLandscape img{
    width: 100%;
  }
  .addThisToAdjustPositionOnMobiles{
    margin-left: -30vw;
  }
}

@media (orientation:portrait){
  .layeredOverImageContainer1000x1000 img{
    height: auto;
    width: 100%;
  }
  .layeredOverImageContainer2222x1000 img{
    /*NEED MAGIC HERE*/ /*Looks like everything works fine*/
    height: 100vmin;
    width: auto;
  }
  .changeFlexPositionPortraitLandscapeAndBackgroundColorToo{ /* Used for the first time in 1-6-3 */
    background-color: #adbbc4;
    justify-content: flex-end;
  }
  .beSquareInPortraitAndFullWidthRectangleInLandscape{
    width: 100vw;
    height: 100vw;
  }
  .beSquareInPortraitAndFullWidthRectangleInLandscape img{
    height: 100%;
    width: auto;
  }
  .addThisToAdjustPositionOnMobiles{
    /*left: 50%;*/ /*Default horizontal center position*/
    margin-top: -20vh;
  }
}

.layeredOverImageContainer2222x1000{ /* To be used in 1-4-3 bird flying away from the tree */
  pointer-events: none; /* CLICK-THROUGH: Make it transparent to mouse and touch so that it wonâ€™t block layers below. */
  z-index: 51;
  position: fixed;  top: 0;  bottom: 0;  left: 0;  right: 0;
  display: flex;  flex-direction: column-reverse;	align-items: center;
  overflow: hidden;
}

.proceedToNextActionButton{ /* Used for the first time in 1-6-3 */
  width: 130px;
  height: 130px;
  position: fixed;
  top: -50%;/* Start hidden and animate in */
  left: 50%;
  transform: translate(-50%,-50%) scale(1);
  border-radius: 25px;
  border: 2px solid rgba(255,255,255,0.3);
  background-color: rgba(211, 222, 229, 0.2);
  box-shadow: 0px 0px 15px 0 rgba( 1,1, 1, 0.15 );
  backdrop-filter: blur( 7px );
  -webkit-backdrop-filter: blur( 7px );

  display: flex;
  align-items: center;
  justify-content: center;
  /*opacity: 0.7;*/ /*backdrop filter doesn't work if opacity is changed*/
  transition: background-color .2s, transform .2s ease-in-out, top 2s ease-in-out, left 4s ease-in;
}
.addThisToMakeItAppearFromTop{  top: 50%;  }
.addThisToAdjustPositionOnDesktops{  margin-top: -21vh;  }
.addThisToMakeItBlowAwayTowardsRight{  left: 500%;  }

.proceedToNextActionButton:hover{
  background-color: rgba(211, 222, 229, 0.35);
  transform: translate(-50%,-50%) scale(1.04);
}
.proceedToNextActionButton img{
  opacity: 0.7;
  transition: opacity .3s;
}
.proceedToNextActionButton img:hover{
  opacity: 1;
}
.addThisForFadeIn2000ms {animation-name: simpleFadeIn; animation-duration: 2s; animation-fill-mode: forwards;}
/* For 1-6-3 state C */
@keyframes simpleFadeIn {
  from {opacity:0;}
  to {opacity:1;}
}
